{
    "openapi": "3.0.0",
    "info": {
        "title": "API Company Backend Role Test",
        "description": "This API has a goal to document all the app's routes.",
        "contact": {
            "email": "joaovictorgarciacoelho@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Dev API"
        }
    ],
    "paths": {
        "/login":{
            "post":{
                "summary": "User Login",
                "description": "User Login Route. Return an Access Token",
                "tags": ["Auth"],
                "requestBody":{
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items":{
                                    "email":{
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            },
                            "examples": {
                                "auth": {
                                    "value": {
                                        "email": "your@email.com",
                                        "password": "YOUR_PASSWORD"
                                    }
                                }
                            }

                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "User Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "properties":{
                                        "accessToken":{
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company":{
            "post":{
                "summary": "Company Register",
                "description":"This route is responsible for registering a new company. Only Super Admins can access it",
                "tags": ["Companies"],
                "security": [{ "bearerAuth": []}],
                "requestBody":{
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            },
                            "examples": {
                                "company": {
                                    "value": {
                                        "name": "Company",
                                        "code": "Company CPNJ"
                                    }
                                }
                            }

                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Code is already in use"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "summary": "List Companies",
                "description": "This route is responsible for listing all the companies. Only Super Admins can access it.",
                "tags": ["Companies"],
                "security": [{ "bearerAuth": []}],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "array",
                                    "items":{
                                        "$ref": "#/components/schemas/Company"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/{id}":{
            "get":{
                "summary": "Get company by its ID",
                "description": "This route is responsible for return all company's information based on its ID. Only Super Admins can access it. Admins can only access for their own company.",
                "tags": ["Companies"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Company ID",
                    "required": true
                }],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "Company Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    }
                }
            },
            "delete":{
                "summary": "Delets a Company by its ID",
                "description": "This route is responsible for deleting all company's information based on its ID. Only Super Admins can access it",
                "tags": ["Companies"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Company ID",
                    "required": true
                }],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "Company Not found"
                    },
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            },
            "patch":{
                "summary": "Updates company information",
                "description": "This route is responsible for updating all company's information based on its ID. Only Super Admins can access it",
                "tags": ["Companies"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Company ID",
                    "required": true
                }],
                "requestBody":{
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            },
                            "examples": {
                                "company": {
                                    "value": {
                                        "name": "Company",
                                        "code": "Company CPNJ"
                                    }
                                }
                            }

                        }
                    }
                },
                "responses":{
                    "400": {
                        "description": "Code is already in use"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "Company Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unit":{
            "post":{
                "summary": "Unit Register",
                "description": "This route is responsible for registering a new unit.",
                "tags": ["Units"],
                "security": [{ "bearerAuth": []}],
                "requestBody":{
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            },
                            "examples": {
                                "unit": {
                                    "value": {
                                        "name": "Unit 1",
                                        "description": "Company Unit 1",
                                        "companyId": "COMPANY_ID"
                                    }
                                }
                            }

                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Company Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "summary": "List Units",
                "description": "This route is responsible for listing all the units. Admins and normal users can only see the units from their own company. Super Admins can see all the units from all companies",
                "tags": ["Units"],
                "security": [{ "bearerAuth": []}],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "array",
                                    "items":{
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unit/{id}":{
            "get":{
                "summary": "Get unit by its ID",
                "description": "This route is responsible for return all unit's information based on its ID. Admins and normal users can only see the units from their own company. Super Admins can see all the units from all companies",
                "tags": ["Units"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unit ID",
                    "required": true
                }],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "Unit Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    }
                }
            },
            "delete":{
                "summary": "Delets an Unit by its ID",
                "description": "This route is responsible for deleting all unit's information based on its ID. Admins and normal users can only delete the units from their own company.",
                "tags": ["Units"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unit ID",
                    "required": true
                }],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "Unit Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    }
                }
            },
            "patch":{
                "summary": "Updates unit information",
                "description": "This route is responsible for updating all unit's information based on its ID. Admins and normal users can only update the units from their own company.",
                "tags": ["Units"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unit ID",
                    "required": true
                }],
                "requestBody":{
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            },
                            "examples": {
                                "unit": {
                                    "value": {
                                        "name": "Unit 1",
                                        "description": "New Description"
                                    }
                                }
                            }

                        }
                    }
                },
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "Unit Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/asset":{
            "post":{
                "summary": "Asset Register",
                "description": "This route is responsible for registering a new machine.",
                "tags": ["Assets"],
                "security": [{ "bearerAuth": []}],
                "requestBody":{
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Asset"
                            },
                            "examples": {
                                "asset": {
                                    "value": {
                                        "name": "asset name",
                                        "description": "asset description",
                                        "unitId": "UNIT_ID",
                                        "model": "asset model",
                                        "owner": "Owner Name",
                                        "imageURL": "asset image url"
                                    }
                                }
                            }

                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Company Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Asset"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "summary": "List Assets",
                "description": "This route is responsible for listing all the assets. Admins and normal users can only see the units from their own company. Super Admins can see all the units from all companies",
                "tags": ["Assets"],
                "security": [{ "bearerAuth": []}],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "array",
                                    "items":{
                                        "$ref": "#/components/schemas/Asset"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/asset/{id}":{
            "get":{
                "summary": "Get asset by its ID",
                "description": "This route is responsible for return all asset's information based on its ID. Admins and normal users can only see the assets from their own company. Super Admins can see all the assets from all companies",
                "tags": ["Assets"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Asset ID",
                    "required": true
                }],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "Asset Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Asset"
                                }
                            }
                        }
                    }
                }
            },
            "delete":{
                "summary": "Delets an Asset by its ID",
                "description": "This route is responsible for deleting all assets's information based on its ID. Admins and normal users can only delete the assets from their own company.",
                "tags": ["Assets"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Asset ID",
                    "required": true
                }],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "Asset Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Asset"
                                }
                            }
                        }
                    }
                }
            },
            "patch":{
                "summary": "Updates asset information",
                "description": "This route is responsible for updating all assets's information based on its ID. Admins and normal users can only update the assets from their own company.",
                "tags": ["Assets"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Asset ID",
                    "required": true
                }],
                "requestBody":{
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Asset"
                            },
                            "examples": {
                                "asset": {
                                    "value": {
                                        "name": "asset name",
                                        "description": "asset description",
                                        "unitId": "UNIT_ID",
                                        "model": "asset model",
                                        "owner": "Owner Name",
                                        "imageURL": "asset image url"
                                    }
                                }
                            }

                        }
                    }
                },
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "Company Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/Asset"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user":{
            "post":{
                "summary": "User Register",
                "description": "This route is responsible for registering a new user. Super Admins can register a user for any company, while admins can only create users for their own company.",
                "tags": ["Users"],
                "security": [{ "bearerAuth": []}],
                "requestBody":{
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "unit": {
                                    "value": {
                                        "name": "Joao",
                                        "email": "admin@admin.com",
                                        "password": "123",
                                        "role": "Admin",
                                        "companyId": "COMPANY_ID"
                                    }
                                }
                            }

                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Company Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "summary": "List Users",
                "description": "Essa rota será responsável por listar as unidades. \nAdmins verão apenas as unidades da sua empresa.\nSuper Admins poderão ver todas.",
                "tags": ["Users"],
                "security": [{ "bearerAuth": []}],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "array",
                                    "items":{
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}":{
            "get":{
                "summary": "Get user by its ID",
                "description": "This route is responsible for return all user's information based on its ID. Admins can only see the users from their own company. Super Admins can see all the assets from all companies",
                "tags": ["Users"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "User ID",
                    "required": true
                }],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "User Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "delete":{
                "summary": "Delets an User by its ID",
                "description": "This route is responsible for deleting all user's information based on its ID. Admins can only delete users from their own company.",
                "tags": ["Users"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "User ID",
                    "required": true
                }],
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "User Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "patch":{
                "summary": "Updates user information",
                "description": "This route is responsible for updating all users's information based on its ID. Admins can only update the users from their own company. Normal Users can only update themselves. Only the user can update its password.",
                "tags": ["Users"],
                "security": [{ "bearerAuth": []}],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "User ID",
                    "required": true
                }],
                "requestBody":{
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "name": "Joao",
                                        "email": "admin@admin.com",
                                        "password": "123",
                                        "role": "SuperAdmin"
                                    }
                                }
                            }

                        }
                    }
                },
                "responses":{
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404":{
                        "description": "User Not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Company": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                }
            },
            "Unit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "companyId":{
                        "type": "string"
                    }
                }
            },
            "Asset":{
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "unitId":{
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "imageURL": {
                        "type": "string"
                    },
                    "healthLevel":{
                        "type": "integer",
                        "min": 0,
                        "max": 100,
                        "default": 100
                    },
                    "status":{
                        "type": "string",
                        "enum": ["Running", "Alerting", "Stopped"]
                    }
                }
            },
            "User":{
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "email"
                    },
                    "password":{
                        "type": "string"
                    },
                    "companyId": {
                        "type": "string"
                    },
                    "role":{
                        "type": "string",
                        "enum": ["SuperAdmin", "Admin", "User"]
                    }
                }
            }
        },
        "securitySchemes" : {
            "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
            }
        }
    }
}